// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteApi.Infra;

namespace TesteApi.Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220206131600_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteApi.Domain.Entities.PersonPhone", b =>
                {
                    b.Property<int>("BusinessEntityID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<int>("PhoneNumberTypeID");

                    b.HasKey("BusinessEntityID");

                    b.HasIndex("PhoneNumberTypeID");

                    b.ToTable("PersonPhones");
                });

            modelBuilder.Entity("TesteApi.Domain.Entities.PhoneNumberType", b =>
                {
                    b.Property<int>("PhoneNumberTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("PhoneNumberTypeID");

                    b.ToTable("PhoneNumberTypes");
                });

            modelBuilder.Entity("TesteApi.Domain.Entities.PersonPhone", b =>
                {
                    b.HasOne("TesteApi.Domain.Entities.PhoneNumberType", "PhoneNumberType")
                        .WithMany("PersonPhones")
                        .HasForeignKey("PhoneNumberTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
